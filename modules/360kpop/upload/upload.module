<?php

/**
 * @file
 * File-handling and attaching files to nodes.
 *
 */
include ('upload.inc');
/**
 * Implementation of hook_help().
 */
function upload_help($path, $arg) {
    switch ($path) {
        case 'admin/help#upload':
            $output = '<p>' . t('The upload module allows users to upload files to the site. The ability to upload files is important for members of a community who want to share work. It is also useful to administrators who want to keep uploaded files connected to posts.') . '</p>';
            $output .= '<p>' . t('Users with the upload files permission can upload attachments to posts. Uploads may be enabled for specific content types on the content types settings page. Each user role can be customized to limit or control the file size of uploads, or the maximum dimension of image files.') . '</p>';
            $output .= '<p>' . t('For more information, see the online handbook entry for <a href="@upload">Upload module</a>.', array('@upload' => 'http://drupal.org/handbook/modules/upload/')) . '</p>';
            return $output;
        case 'admin/settings/upload':
            return '<p>' . t('Users with the <a href="@permissions">upload files permission</a> can upload attachments. Users with the <a href="@permissions">view uploaded files permission</a> can view uploaded attachments. You can choose which post types can take attachments on the <a href="@types">content types settings</a> page.', array('@permissions' => url('admin/user/permissions', array('fragment' => 'module-upload')), '@types' => url('admin/content/types'))) . '</p>';
    }
}

/**
 * Implementation of hook_perm().
 */
function upload_perm() {
    return array(
        'Upload Files Admin',   // Quyen chinh cau hinh trang
        'Upload Files Add',
        'Upload Files View',
        'Upload Files Edit Any',
        'Upload Files Edit Own',
        'Upload Files Delete Any',
        'Upload Files Delete Own',
    );
}

/**
 * Implementation of hook_menu().
 */
function upload_menu() {
    // Task : Page view
    $items['upload/page/%'] = array(
        'page callback' => 'upload_page',
        'page arguments' => array(2, 3), // page / post
        'access arguments' => array('Upload Files Add'),
        'file' => 'file.inc',
        'type' => MENU_CALLBACK,
    );
    // Taks : File process
    $items['upload/file'] = array(
        'page callback' => 'upload_file',
        'page arguments' => array(2, 3), // node, task = {upload, crop, resize, edit ...}
        'access arguments' => array('Upload Files Add'),
        'file' => 'upload.inc',
        'type' => MENU_CALLBACK,
    );
    // Taks : File process
    $items['upload/image/%'] = array(
        'page callback' => 'upload_image',
        'page arguments' => array(2, 3), // fid, task = {upload, crop, resize, edit ...}
        'access arguments' => array('Upload Files Add'),
        'file' => 'upload.inc',
        'type' => MENU_CALLBACK,
    );
    // Task : Xy ly upload link
    $items['upload/link'] = array(
        'page callback' => 'upload_link',
        'page arguments' => array(2, 3), // node, task = {upload, crop, resize, edit ...}
        'access arguments' => array('Upload Files Add'),
        'file' => 'upload.inc',
        'type' => MENU_CALLBACK,
    );
    // Task: Testing
    $items['admin/upload'] = array(
        'title' => 'Upload Files Testing',
        'page callback' => 'upload_testing',
        'access arguments' => array('Upload Files Admin'),
        'type' => MENU_CALLBACK,
    );
    // Task: Rebuild module
    $items['admin/upload/build'] = array(
        'title' => 'Rebuild Category Module',
        'page callback' => 'upload_rebuild_page',
        'access arguments' => array('Upload Files Admin'),
        'type' => MENU_CALLBACK,
    );
    return $items;
}

/**
 * @todo Hien thi cac page cua Uploader
 */
function upload_page($page, $id = NULL) {

    drupal_set_header('Content-Type: text/html');
    
    $data['post'] = $id;
    
    $router = array(
        'library' => 'page.library',
        'post' => 'page.post',
        'url' => 'page.url',
        'edit' => 'page.edit',
    );
    
    $file = isset($router[$page]) ? $router[$page] : 'page.upload';
    
    // Query data for edit page
    if($page == 'edit') {
        $data['fid'] = $id;
        $data['post'] = router::getInt('post', arg(4));
        $data['file'] = file::getFile($id);
        $data['next'] = file::getFileNext($id, $data['post']);
    }
    
    // Query data for file of post page
    if($page == 'post') {
        $data['files'] = file::getPostFiles($id);
    }
    
    // Query data for media library page
    if($page == 'library') {
        
        // Bo loc
        $filter = array();
        
        // Lay du lieu filter cua client
        $op = router::getString('op');
        $uid = router::getInt('uid');
        $created = router::getInt('created');
        $search = router::getString('search');
        $current = router::getString('page', 1);

        // Bo loc tim kiem
        if($op == 'Search' && $search != '') {
            // Xu ly keyword
            $search = mb_strtolower(check_plain($search));
            $part = explode(' ', $search);
            $list = array();

            foreach($part as $item) {
                if(strlen($item) > 1) {
                    $list[] = $item;
                }
            }

            $search = implode('%', $list);
            
            if($search) {
                $filter['name'] = array(
                    'op' => 'LIKE',
                    'value' => "'%%$search%'",
                );
            }
        }
        
        // Loc theo ngay thang
        if($created > 0) {
            $start = $created;
            $end = $start + 30 * 24 * 60 * 60; // them 1 thang
            $filter['start'] = array(
                'key' => 'created',
                'op' => '>=',
                'value' => $start
            );
            $filter['end'] = array(
                'key' => 'created',
                'op' => '<=',
                'value' => $end
            );
        }
        
        // Loc theo nguoi upload
        if($uid) {
            $filter['uid'] = $uid;
        }

        // Phan trang
        $offset = 0;    // offset
        $limit = 20;    // 20 anh tren trang
        
        $totalFiles = file::getFilesCount($filter);
        $totalPage = ceil($totalFiles/$limit);
        
        if($current > $totalPage) {
            $current = $totalPage;
        }
        
        if($current < 0) {
            $current = 0;
        }

        $offset = ($current - 1) * $limit;

        $data['uid'] = $uid;
        $data['created'] = $created;
        $data['page'] = $current;
        $data['total'] = $totalFiles;
        $data['users'] = file::getUsers();
        $data['times'] = file::getFilesTime();
        $data['paging'] = file::getPagingFile($current, $totalPage);
        $data['files'] = file::getLibraryFiles($filter, $offset, $limit);
    }

    render(dirname(__FILE__) . '/views/' . $file . '.inc', $data, true);
    
    exit();
}

/**
 * @todo Xu ly cac task cua Uploader
 * @param $nid  Node upload file vao
 * @param $task Tac vu xu ly
 * @param $task
 *      POST : upload files | delete files
 *      GET : Get list of image files
 */
function upload_file($id, $task) {
    error_reporting(E_ALL | E_STRICT);
    
    $uploader = new UploadHandler($id, $option);
    
    if($task == 'update') {
        $file = new stdClass();
        $file->fid = router::getInt('fid', $id);
        $file->name = router::getString('name');
        $file->alternate = router::getString('alt');
        $file->description = router::getString('desc');

        if($file->fid && $file->name) {
            data::insertObject('{files}', $file);
            exit('1');
        }
        exit('0');
    }

    header('Pragma: no-cache');
    header('Cache-Control: no-store, no-cache, must-revalidate');
    header('Content-Disposition: inline; filename="files.json"');
    header('X-Content-Type-Options: nosniff');
    header('Access-Control-Allow-Origin: *');
    header('Access-Control-Allow-Methods: OPTIONS, HEAD, GET, POST, PUT, DELETE');
    header('Access-Control-Allow-Headers: X-File-Name, X-File-Type, X-File-Size');

    switch ($_SERVER['REQUEST_METHOD']) {
        case 'OPTIONS':
            break;
        case 'HEAD':
        case 'GET':
            $uploader->get($id);
            break;
        case 'POST':
            if (isset($_REQUEST['_method']) && $_REQUEST['_method'] === 'DELETE') {
                $uploader->delete($id);
            } else {
                $uploader->post();
            }
            break;
        case 'DELETE':
            $uploader->delete($id);
            break;
        default:
            header('HTTP/1.1 405 Method Not Allowed');
    }
    
    if($task == 'delete' && $_SERVER['REQUEST_METHOD'] != 'DELETE') {
        $uploader->delete($id);
    }
    
    exit();
}

/**
 * @todo    Xu ly su kien upload link
 */
function upload_link($id, $task) {
    $task = arg(2);
    $post = router::getInt('post');
    $link = router::getString('link');
    $images = router::getString('images');
    
    $uploader = new UploadHandler($post);
    
    $data = array();
    $data['delete'] = true;
    $data['post'] = $post;
    
    set_time_limit(0);
    
    // Respon to client
    drupal_set_header('Content-Type: text/html');
    
    // File list container
    $files = array();
    
    if($task == 'extract' && $link) {
        $files = $uploader->imagesExtract($link);
        //echo drupal_to_js($files);
    }
    
    if($task == 'upload' && $images) {
        $list = explode("\n", $images);
        $list = array_unique($list);
        foreach($list as $link) {
            // Check image
            if(!preg_match('#^(http://|https://)(.*)\.(gif|jpg|jpeg|png)$#ism', $link)) {
                continue;
            }
            // Save file
            $file = $uploader->handleImageDownload($link);
            
            if($file) {
                $files[] = $file;
            }
        }
        //echo drupal_to_js($files);
    }
    
    $data['files'] = $files;
    
    echo render(dirname(__FILE__) . '/views/list.inc', $data, false);
    
    exit;
}
/**
 * @todo    Xu ly anh
 * @param   $fid    file id
 * @param   $task   crop/resize/...
 */
function upload_image($fid, $task = NULL) {
    $uploader = new UploadHandler();
    
    drupal_set_header('Content-Type: text/html');
    
    if($task == 'crop') {
        $result = $uploader->imageCrop($fid);
    }
    
    exit;
}

/**
 * @todo Create uploader handle
 */
function upload_trigger($post, $selector) {
    $data = array();
    $data['post'] = $post;
    $data['link'] = url('upload/page/computer/' . $post);
    $data['selector'] = $selector;
    upload_load_script();
    return render(dirname(__FILE__) . '/views/trigger.inc', $data, false);
}

/**
 * @todo Upload File Testing Page
 */
function upload_testing() {
    return render(dirname(__FILE__) . '/views/test.inc', array(), false);
}

/**
 * @todo Load script / css for uploader
*/
function upload_load_script() {
    drupal_add_js('js/jquery.simplemodal.js');
    drupal_add_css('css/simplemodal.css');
}

function upload_rebuild_page() {
    module_disable(array('upload'));
    module_enable(array('upload'));
    menu_rebuild();
    return 'Done';
}
